# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bosdyn.api import payload_software_update_initiation_pb2 as bosdyn_dot_api_dot_payload__software__update__initiation__pb2


class PayloadSoftwareUpdateInitiationServiceStub(object):
    """This service is hosted by a payload and is used by Spot to tell it to perform
    certain actions related to payload software update.  These RPCs support events only;
    no data exchange takes place.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TriggerSendPayloadSoftwareInfo = channel.unary_unary(
                '/bosdyn.api.PayloadSoftwareUpdateInitiationService/TriggerSendPayloadSoftwareInfo',
                request_serializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoResponse.FromString,
                )
        self.TriggerInitiateUpdate = channel.unary_unary(
                '/bosdyn.api.PayloadSoftwareUpdateInitiationService/TriggerInitiateUpdate',
                request_serializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateRequest.SerializeToString,
                response_deserializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateResponse.FromString,
                )


class PayloadSoftwareUpdateInitiationServiceServicer(object):
    """This service is hosted by a payload and is used by Spot to tell it to perform
    certain actions related to payload software update.  These RPCs support events only;
    no data exchange takes place.
    """

    def TriggerSendPayloadSoftwareInfo(self, request, context):
        """Tell the payload to send information about its current software version.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TriggerInitiateUpdate(self, request, context):
        """Tell the payload to initiate its software update operation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PayloadSoftwareUpdateInitiationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TriggerSendPayloadSoftwareInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerSendPayloadSoftwareInfo,
                    request_deserializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoResponse.SerializeToString,
            ),
            'TriggerInitiateUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.TriggerInitiateUpdate,
                    request_deserializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateRequest.FromString,
                    response_serializer=bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bosdyn.api.PayloadSoftwareUpdateInitiationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PayloadSoftwareUpdateInitiationService(object):
    """This service is hosted by a payload and is used by Spot to tell it to perform
    certain actions related to payload software update.  These RPCs support events only;
    no data exchange takes place.
    """

    @staticmethod
    def TriggerSendPayloadSoftwareInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PayloadSoftwareUpdateInitiationService/TriggerSendPayloadSoftwareInfo',
            bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoRequest.SerializeToString,
            bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerSendPayloadSoftwareInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TriggerInitiateUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bosdyn.api.PayloadSoftwareUpdateInitiationService/TriggerInitiateUpdate',
            bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateRequest.SerializeToString,
            bosdyn_dot_api_dot_payload__software__update__initiation__pb2.TriggerInitiateUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
